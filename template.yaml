AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM Template for Applot Server Infrastructure

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Runtime: python3.8
    MemorySize: 1536

Resources:

  # WEBSOCKETS
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"


  # ROUTES
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      AuthorizationType: None
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref ConnectIntegration
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $disconnect
      AuthorizationType: None
      OperationName: DisconnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref DisconnectIntegration
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations

  CommandRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: sendcommand
      AuthorizationType: None
      OperationName: CommandRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref CommandIntegration
  CommandIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      Description: Command Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CommandHandlerFunction.Arn}/invocations


  # Deployment
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
      - CommandRoute
    Properties:
      ApiId: !Ref WebSocketApi


  # Stage
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref WebSocketApi


  # LAMBDAS
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: components/lambdas/on_connect_handler/
      Handler: app.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: components/lambdas/on_disconnect_handler/
      Handler: app.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  CommandHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: components/lambdas/command_handler/
      Handler: app.lambda_handler
      Policies:
        - AmazonDynamoDBFullAccess
        - CloudWatchLogsFullAccess
        - AmazonAPIGatewayInvokeFullAccess
        - AmazonAPIGatewayAdministrator
  CommandHandlerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CommandHandlerFunction
      Principal: apigateway.amazonaws.com


  # DYNAMODB
  Accounts:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Accounts"
      AttributeDefinitions:
        - AttributeName: "account_id"
          AttributeType: "S"
        - AttributeName: "email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "account_id"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      GlobalSecondaryIndexes:
        - IndexName: "email_index"
          KeySchema:
            - AttributeName: "email"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"

  Projects:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Projects"
      AttributeDefinitions:
        - AttributeName: "project_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "project_id"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"

  Connections:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Connections"
      AttributeDefinitions:
        - AttributeName: "account_id"
          AttributeType: "S"
        - AttributeName: "connection_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "account_id"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      GlobalSecondaryIndexes:
        - IndexName: "connection_id_index"
          KeySchema:
            - AttributeName: "connection_id"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
